/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.merchant.components;

import com.merchant.database.MerchantConnection;
import com.merchant.utils.KeyCode;
import com.merchant.views.EmpleadosPanel;
import com.merchant.views.configuration.ConfigurationPanel;
import com.merchant.views.MerchantPanel;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import javax.swing.JButton;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;

/**
 *
 * @author alan
 */
public class MerchantMainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MerchantMainFrame
     */
    private Dimension screen;
    private GraphicsDevice gd;
    private KeyCode keyCode;
    public MerchantConnection merchantConnection;

    public MerchantMainFrame() {
        initComponents();
        screen = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        backgroundDesktop.setBounds(10, 10, screen.width, screen.height);
        this.setSize(screen);
        setExtendedState(this.MAXIMIZED_BOTH);
        this.setTitle("Merchant desktop");
        setFullScreen();
        merchantConnection = new MerchantConnection();
        keyCode = new KeyCode();
    }
    
    private void setFullScreen () {
        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        gd = env.getDefaultScreenDevice();
        gd.setFullScreenWindow(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopMenu = new javax.swing.JPopupMenu();
        menuConfiguracion = new javax.swing.JMenu();
        itemConfiguracion = new javax.swing.JMenuItem();
        itemEmpleados = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemSalir = new javax.swing.JMenuItem();
        backgroundDesktop = new javax.swing.JDesktopPane();
        barraInicio = new javax.swing.JToolBar();
        lblInicio = new javax.swing.JLabel();

        desktopMenu.setToolTipText("Menu");

        menuConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merchant/images/icons/cog.png"))); // NOI18N
        menuConfiguracion.setText("Configuración");

        itemConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merchant/images/icons/cog.png"))); // NOI18N
        itemConfiguracion.setText("Configuración");
        itemConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConfiguracionActionPerformed(evt);
            }
        });
        menuConfiguracion.add(itemConfiguracion);

        itemEmpleados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merchant/images/icons/empleados.png"))); // NOI18N
        itemEmpleados.setText("Empleados");
        itemEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEmpleadosActionPerformed(evt);
            }
        });
        menuConfiguracion.add(itemEmpleados);
        itemEmpleados.getAccessibleContext().setAccessibleName("Empleados");

        desktopMenu.add(menuConfiguracion);
        desktopMenu.add(jSeparator1);

        itemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merchant/images/icons/exit.png"))); // NOI18N
        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        desktopMenu.add(itemSalir);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        backgroundDesktop.setBackground(new java.awt.Color(52, 138, 192));
        backgroundDesktop.setForeground(new java.awt.Color(255, 255, 255));
        backgroundDesktop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                backgroundDesktopKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout backgroundDesktopLayout = new javax.swing.GroupLayout(backgroundDesktop);
        backgroundDesktop.setLayout(backgroundDesktopLayout);
        backgroundDesktopLayout.setHorizontalGroup(
            backgroundDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 642, Short.MAX_VALUE)
        );
        backgroundDesktopLayout.setVerticalGroup(
            backgroundDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        getContentPane().add(backgroundDesktop, java.awt.BorderLayout.CENTER);

        barraInicio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        barraInicio.setFloatable(false);
        barraInicio.setRollover(true);
        barraInicio.setToolTipText("");
        barraInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        barraInicio.setPreferredSize(new java.awt.Dimension(75, 43));

        lblInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/merchant/images/icons/conf.png"))); // NOI18N
        lblInicio.setText("Inicio");
        lblInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInicioMouseClicked(evt);
            }
        });
        barraInicio.add(lblInicio);

        getContentPane().add(barraInicio, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInicioMouseClicked
        // TODO add your handling code here:
        toggleShowMenuInicio();
    }//GEN-LAST:event_lblInicioMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        aparecerMenuInicio(evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itemSalirActionPerformed

    private void backgroundDesktopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backgroundDesktopKeyPressed
        aparecerMenuInicio(evt.getKeyCode());
    }//GEN-LAST:event_backgroundDesktopKeyPressed

    private void itemConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConfiguracionActionPerformed
        ConfigurationPanel form = new ConfigurationPanel(merchantConnection);
        newInternalFrame(form, "Configuraciones");
    }//GEN-LAST:event_itemConfiguracionActionPerformed

    private void itemEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEmpleadosActionPerformed
         newInternalFrame(new EmpleadosPanel(), "Empleados");
    }//GEN-LAST:event_itemEmpleadosActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        toggleShowMenuInicio();
    }//GEN-LAST:event_formKeyReleased

    private void aparecerMenuInicio(int code){
        if (keyCode.codeIsPressed("windows", code)) {
            toggleShowMenuInicio();
        }
    }
    
    private void toggleShowMenuInicio () {
        int x = lblInicio.getBounds().x - 15;
        int y = (lblInicio.getBounds().y - (lblInicio.getHeight()/2)) - (desktopMenu.getComponentCount() * 20);
        if (!desktopMenu.isShowing()){
            desktopMenu.show(lblInicio, x, y + 5);
        } else {
            desktopMenu.setFocusable(false);
            desktopMenu.setVisible(false);
        }
    }
    
    private void newInternalFrame(final MerchantPanel panel, final String internalTitle) {
        final MerchantMainFrame frame = this;
        frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                final MerchantInternalFrame internal = new MerchantInternalFrame(internalTitle, panel, false, true, false, true);
                final JButton botonInternal = new JButton(internalTitle);
                botonInternal.addActionListener(new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent ae) {
                        try {
                            if (internal.isVisible()){
                                internal.setIcon(true);
                            }else {
                                internal.setIcon(false);
                            }
                            internal.setSelected(true);
                        } catch (PropertyVetoException ex) {
                            System.err.println(ex);
                        }
                    }
                });
                internal.addInternalFrameListener(new InternalFrameListener(){
                    @Override
                    public void internalFrameOpened(InternalFrameEvent ife) {}

                    @Override
                    public void internalFrameClosing(InternalFrameEvent ife) {}

                    @Override
                    public void internalFrameClosed(InternalFrameEvent ife) {
                        barraInicio.remove(botonInternal);
                        barraInicio.repaint();
                    }

                    @Override
                    public void internalFrameIconified(InternalFrameEvent ife) {
                        internal.setVisible(false);
                    }

                    @Override
                    public void internalFrameDeiconified(InternalFrameEvent ife) {
                        internal.setVisible(true);
                    }

                    @Override
                    public void internalFrameActivated(InternalFrameEvent ife) {}

                    @Override
                    public void internalFrameDeactivated(InternalFrameEvent ife) {}
                });
                internal.setVisible(true);
                backgroundDesktop.add(internal);
                barraInicio.add(botonInternal);
                panel.setParent(internal);
                frame.setCursor(Cursor.getDefaultCursor());
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane backgroundDesktop;
    private javax.swing.JToolBar barraInicio;
    private javax.swing.JPopupMenu desktopMenu;
    private javax.swing.JMenuItem itemConfiguracion;
    private javax.swing.JMenuItem itemEmpleados;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblInicio;
    private javax.swing.JMenu menuConfiguracion;
    // End of variables declaration//GEN-END:variables
}
