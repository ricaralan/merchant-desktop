/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.merchant.views;

import com.merchant.components.tableModels.ProveedorTableModel;
import com.merchant.components.tableModels.MerchantTableModel;
import com.merchant.controllers.ProveedorController;
import com.merchant.controllers.DomicilioController;
import com.merchant.database.MerchantConnection;
import com.merchant.pojos.Proveedor;
import com.merchant.pojos.Domicilio;
import com.merchant.utils.ImageJPanel;
import com.merchant.utils.Photo;
import java.sql.Connection;
import java.util.List;
import javax.swing.JOptionPane;
import com.merchant.utils.validate.ValidateFieldError;
import com.merchant.utils.validate.Validator;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.border.Border;

/**
 *
 * @author Eleazar
 */
public class ProveedoresPanel extends MerchantPanel {

    /**
     * Creates new form ProveedorForm
     */
    Connection connection = null;
    private ProveedorController proveedorController = null;
    private boolean crearProveedor;
    private int idActualizar;
    private int idActualizarDomicilio;
    private ImageJPanel imagePanel;
    private Photo photo;

    public ProveedoresPanel(MerchantConnection c) {
        initComponents();
        this.connection = c.getConnection();
        proveedorController = new ProveedorController();
        crearProveedor = true;
        photo = new Photo();
        photo.setBasePath("/images/proveedores/");
        tableProveedores.setModel(new ProveedorTableModel());
        initDataTable();
    }

    private void initDataTable() {
        getTableModel().initData(connection);
    }

    private MerchantTableModel getTableModel() {
        return ((MerchantTableModel) tableProveedores.getModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionesProveedor = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtTelCelular = new javax.swing.JTextField();
        txtTelCasa = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        panelFoto = new javax.swing.JPanel();
        btnCargarImagen = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtCP = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtNoInt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtNoExt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtColonia = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtLocalidad = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtMunicipio = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        btnOpcionForm = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProveedores = new javax.swing.JTable();

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        opcionesProveedor.add(Editar);

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        opcionesProveedor.add(Eliminar);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setMaximumSize(new java.awt.Dimension(964, 547));

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Para m√°s opciones, selecciona una fila y presiona clic derecho");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Proveedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 153, 255)));

        jLabel2.setText("Nombre:");

        jLabel10.setText("Apellidos");

        jLabel3.setText("R.F.C.:");

        jLabel11.setText("E-Mail:");

        jLabel5.setText("Tel. Casa");

        jLabel4.setText("Tel. Celular");

        panelFoto.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 94, Short.MAX_VALUE)
        );

        btnCargarImagen.setText("Subir");
        btnCargarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtTelCasa)
                    .addComponent(txtRFC, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(txtNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelCelular)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addComponent(txtApellidos)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCargarImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(panelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtTelCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Direcci√≥n Proveedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 153, 255)));

        jLabel14.setText("Calle");

        jLabel15.setText("C. P.");

        jLabel16.setText("No. Ext.");

        jLabel17.setText("No. Int.");

        jLabel18.setText("Colonia");

        jLabel19.setText("Localidad");

        jLabel20.setText("Municipio");

        jLabel21.setText("Estado");

        jLabel22.setText("Pais");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtMunicipio)
                                        .addGap(12, 12, 12))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(57, 57, 57)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEstado)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                .addGap(103, 103, 103))
                            .addComponent(txtCalle, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtColonia)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPais)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel16))
                                    .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)))
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLocalidad)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17)))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel15))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnOpcionForm.setText("Crear");
        btnOpcionForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpcionFormActionPerformed(evt);
            }
        });

        tableProveedores.setAutoCreateRowSorter(true);
        tableProveedores.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableProveedores.setComponentPopupMenu(opcionesProveedor);
        tableProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProveedoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableProveedores);
        tableProveedores.getAccessibleContext().setAccessibleName("");
        tableProveedores.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 652, Short.MAX_VALUE)
                                .addComponent(btnOpcionForm, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(15, 15, 15)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpcionForm)
                    .addComponent(btnCancel))
                .addGap(10, 10, 10)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        int row = tableProveedores.getSelectedRow();
        if (row != -1) {
            Proveedor proveedor = (Proveedor) ((ProveedorTableModel) 
                    tableProveedores.getModel())
                    .getObjectByRow(row);
            Domicilio domicilio = new DomicilioController().getById(connection, 
                    proveedor.domicilio_id_domicilio);
            setDatosProveedorForm(proveedor);
            setDatosDomicilioForm(domicilio);
            btnOpcionForm.setText("Actualizar");
            idActualizar = proveedor.id_proveedor;
            idActualizarDomicilio = proveedor.domicilio_id_domicilio;
            crearProveedor = false;
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        int row = tableProveedores.getSelectedRow();
        if (row != -1) {
            Proveedor proveedor = (Proveedor) ((MerchantTableModel) tableProveedores
                    .getModel()).getObjectByRow(row);
            if (proveedor.id_proveedor == idActualizar) {
                JOptionPane.showMessageDialog(this, "Este registro esta en edici√≥n,"
                        + " \n finalize para poder eliminar ", "ERROR AL ELIMINAR", 1);
            } else {
                int res = JOptionPane.showConfirmDialog(this, "¬øEsta seguro de eliminar al proveedor \""
                        + proveedor.nombre + "\"?");
                if (res == JOptionPane.OK_OPTION) {
                    if (proveedorController.delete(connection, proveedor.id_proveedor,
                            proveedor.domicilio_id_domicilio)) {
                        ((ProveedorTableModel) tableProveedores.getModel()).initData(connection);
                    } else {
                        JOptionPane.showMessageDialog(this, "Por favor intente m√°s tarde...",
                                "ERROR AL ELIMINAR", 1);
                    }
                }
            }
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        cleanDatosProveedorForm();
        btnOpcionForm.setText("Crear");
        idActualizar = 0;
        idActualizarDomicilio = 0;
        crearProveedor = true;
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOpcionFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpcionFormActionPerformed
        Border borderBlack = BorderFactory.createLineBorder(Color.black, 1);
        Border borderOrange = BorderFactory.createLineBorder(Color.orange, 2);
        if (txtNombre.getText().isEmpty() && txtApellidos.getText().isEmpty()
                && txtRFC.getText().isEmpty()) {
            txtNombre.setBorder(borderOrange);
            txtApellidos.setBorder(borderOrange);
            txtRFC.setBorder(borderOrange);
            txtCalle.setBorder(borderOrange);
            txtNoExt.setBorder(borderOrange);
            txtCP.setBorder(borderOrange);
            txtColonia.setBorder(borderOrange);
            JOptionPane.showMessageDialog(this, "Los campos marcados son requeridos ",
                    "Campos vacios", 1, null);
        } else {
            txtNombre.setBorder(borderBlack);
            txtApellidos.setBorder(borderBlack);
            txtRFC.setBorder(borderBlack);
            txtCalle.setBorder(borderBlack);
            txtNoExt.setBorder(borderBlack);
            txtCP.setBorder(borderBlack);
            txtColonia.setBorder(borderBlack);
            if (validar()) {
                try {
                    Proveedor proveedor = getDatosProveedor();
                    Domicilio domicilio = getDatosDomicilio();
                    if (crearProveedor) {
                        if (!new ProveedorController().create(connection, proveedor,
                                domicilio)) {
                            JOptionPane.showMessageDialog(this, "Por favor intente m√°s tarde...",
                                    "ERROR AL REGISTRAR", 1);
                        }
                    } else {
                        if (!new ProveedorController().update(connection, proveedor, idActualizar,
                                domicilio, idActualizarDomicilio)) {
                            JOptionPane.showMessageDialog(this, "Por favor intente m√°s tarde...",
                                    "ERROR AL ACTUALIZAR", 1);
                        } else {
                            crearProveedor = true;
                            btnOpcionForm.setText("Crear");
                            idActualizar = 0;
                            idActualizarDomicilio = 0;
                        }
                    }
                    photo.uploadSelectedPhoto();
                    initDataTable();
                    cleanDatosProveedorForm();

                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error " 
                            + e, "ERROR...", 1);
                }
            }
        }
    }//GEN-LAST:event_btnOpcionFormActionPerformed

    private void btnCargarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarImagenActionPerformed
        photo.setPhoto(parent);
        photo.setPhotoJPanel(panelFoto);
    }//GEN-LAST:event_btnCargarImagenActionPerformed

    private void tableProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProveedoresMouseClicked
        if (evt.getClickCount() > 1) {
            int row = tableProveedores.getSelectedRow();
            if (row != -1) {
                Proveedor proveedor = (Proveedor) ((ProveedorTableModel) 
                        tableProveedores.getModel())
                        .getObjectByRow(row);
                Domicilio domicilio = new DomicilioController().getById(connection,
                        proveedor.domicilio_id_domicilio);
                setDatosProveedorForm(proveedor);
                setDatosDomicilioForm(domicilio);
                btnOpcionForm.setText("Actualizar");
                idActualizar = proveedor.id_proveedor;
                idActualizarDomicilio = proveedor.domicilio_id_domicilio;
                crearProveedor = false;
            }
        }
    }//GEN-LAST:event_tableProveedoresMouseClicked

    private synchronized Proveedor getDatosProveedor() {
        Proveedor proveedor = new Proveedor();
        proveedor.rfc = txtRFC.getText();
        proveedor.nombre = txtNombre.getText();
        proveedor.prov_apellidos = txtApellidos.getText();
        proveedor.prov_telefono_celular = txtTelCelular.getText();
        proveedor.prov_telefono_casa = txtTelCasa.getText();
        proveedor.email = txtEmail.getText();
        proveedor.domicilio_id_domicilio = idActualizarDomicilio;
        proveedor.prov_status = 1;
        proveedor.imagen_proveedor = photo.getPosiblePathPhoto();
        return proveedor;
    }

    private synchronized Domicilio getDatosDomicilio() {
        Domicilio domicilio = new Domicilio();
        domicilio.dom_calle = txtCalle.getText();
        domicilio.dom_numExt = txtNoExt.getText();
        domicilio.dom_numInt = txtNoInt.getText();
        domicilio.dom_colonia = txtColonia.getText();
        domicilio.dom_cod_postal = txtCP.getText();
        domicilio.dom_localidad = txtLocalidad.getText();
        domicilio.dom_municipio = txtMunicipio.getText();
        domicilio.dom_estado = txtEstado.getText();
        domicilio.dom_pais = txtPais.getText();
        return domicilio;
    }

    private synchronized void setDatosProveedorForm(Proveedor proveedor) {
        cleanDatosProveedorForm();
        txtRFC.setText(proveedor.rfc);
        txtNombre.setText(proveedor.nombre);
        txtApellidos.setText(proveedor.prov_apellidos);
        txtTelCelular.setText(proveedor.prov_telefono_celular);
        txtTelCasa.setText(proveedor.prov_telefono_casa);
        txtEmail.setText(proveedor.email);
        if (proveedor.imagen_proveedor.length() > 1) {
            photo.setPhoto(proveedor.imagen_proveedor);
            photo.setPhotoJPanel(panelFoto);
        }
    }

    private synchronized void setDatosDomicilioForm(Domicilio domicilio) {
        idActualizarDomicilio = domicilio.id_domicilio;
        txtCalle.setText(domicilio.dom_calle);
        txtNoExt.setText(domicilio.dom_numExt);
        txtNoInt.setText(domicilio.dom_numInt);
        txtColonia.setText(domicilio.dom_colonia);
        txtCP.setText(domicilio.dom_cod_postal);
        txtLocalidad.setText(domicilio.dom_localidad);
        txtMunicipio.setText(domicilio.dom_municipio);
        txtEstado.setText(domicilio.dom_estado);
        txtPais.setText(domicilio.dom_pais);

    }

    private void cleanDatosProveedorForm() {
        txtApellidos.setText("");
        txtCP.setText("");
        txtCalle.setText("");
        txtColonia.setText("");
        txtEmail.setText("");
        txtEstado.setText("");
        txtLocalidad.setText("");
        txtMunicipio.setText("");
        txtNoExt.setText("");
        txtNoInt.setText("");
        txtNombre.setText("");
        txtPais.setText("");
        txtRFC.setText("");
        txtTelCasa.setText("");
        txtTelCelular.setText("");
        photo.cleanPanelPhoto(panelFoto);
        idActualizarDomicilio = 0;
    }

    /*private String fecha() {
     Date now = new Date(System.currentTimeMillis());
     SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
     SimpleDateFormat hour = new SimpleDateFormat("HH:mm:ss");
     String fecha = date.format(now) + " " + hour.format(now);
     return fecha;
     }*/
    private synchronized void setFotoLogo(String path) {
        imagePanel = new ImageJPanel(panelFoto, path);
        panelFoto.add(imagePanel).repaint();
    }

    public boolean validar() {
        boolean valido = true;
        Proveedor proveedor = getDatosProveedor();
        Validator v = new Validator();
        List<ValidateFieldError> errors = v.validateFields(proveedor);
        Border borderRED = BorderFactory.createLineBorder(Color.RED, 3);
        Border borderBlack = BorderFactory.createLineBorder(Color.yellow, 1);
        for (ValidateFieldError e : errors) {
            switch (e.fieldName) {
                case "email":
                    if (e.getErrors().size() > 0) {
                        txtEmail.setBorder(borderRED);
                        valido = false;
                    } else {
                        //txtMail.setBorder(null);
                        txtEmail.setBorder(borderBlack);
                    }
                    break;
                case "rfc":
                    if (e.getErrors().size() > 0) {
                        txtRFC.setBorder(borderRED);
                        valido = false;
                    } else {
                        //txtRFC.setBorder(null);
                        txtRFC.setBorder(borderBlack);
                    }
                    break;
                case "nombre":
                    if (e.getErrors().size() > 0) {
                        txtNombre.setBorder(borderRED);
                        valido = false;
                    } else {
                        //txtRFC.setBorder(null);
                        txtNombre.setBorder(borderBlack);
                    }
            }
        }
        return valido;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Editar;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCargarImagen;
    private javax.swing.JButton btnOpcionForm;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPopupMenu opcionesProveedor;
    private javax.swing.JPanel panelFoto;
    private javax.swing.JTable tableProveedores;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtColonia;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtLocalidad;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNoExt;
    private javax.swing.JTextField txtNoInt;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtTelCasa;
    private javax.swing.JTextField txtTelCelular;
    // End of variables declaration//GEN-END:variables
}
