/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.merchant.views.configuration;

import com.merchant.components.tableModels.EmpresaTableModel;
import com.merchant.components.tableModels.MerchantTableModel;
import com.merchant.controllers.EmpresaController;
import com.merchant.database.models.RegimenModel;
import com.merchant.pojos.Empresa;
import com.merchant.pojos.Regimen;
import com.merchant.utils.MerchantComboSQL;
import com.merchant.utils.Photo;
import com.merchant.utils.validate.ValidateFieldError;
import com.merchant.utils.validate.Validator;
import java.awt.Color;
import java.sql.Connection;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;

/**
 *
 * @author alan
 */
public class EmpresasPanel extends AbstractConfigurationPanel {

    /**
     * Creates new form EmpresasForm
     */
    Connection connection = null;
    private EmpresaController empresaController = null;
    private boolean crearEmpresa;
    private int idActualizar;
    private JTable tableEmpresas;
    private final Photo photo;

    public EmpresasPanel(Connection connection, JTable table) {
        initComponents();
        this.connection = connection;
        empresaController = new EmpresaController();
        crearEmpresa = true;
        tableEmpresas = table;
        tableEmpresas.setModel(new EmpresaTableModel());
        comboRegimen.setModel(new MerchantComboSQL(connection, new RegimenModel(), "reg_descripcion"));
        initDataTable();
        photo = new Photo();
        photo.setBasePath("/images/empresas/");
    }

    private void initDataTable() {
        getTableModel().initData(connection);
    }

    private MerchantTableModel getTableModel() {
        return ((MerchantTableModel) tableEmpresas.getModel());
    }

    private MerchantComboSQL getComboSQLModel() {
        return (MerchantComboSQL) (comboRegimen.getModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionesEmpresa = new javax.swing.JPopupMenu();
        Editar = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTel1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTel2 = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtWebEmpresa = new javax.swing.JTextField();
        panelFoto = new javax.swing.JPanel();
        btnOpcionForm = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        comboRegimen = new javax.swing.JComboBox();

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });
        opcionesEmpresa.add(Editar);

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        opcionesEmpresa.add(Eliminar);

        jLabel2.setText("Nombre:");

        jLabel3.setText("R.F.C.:");

        jLabel4.setText("Regimen:");

        jLabel5.setText("Tel1:");

        jLabel6.setText("Tel2 (OPCIONAL):");

        jLabel7.setText("E-Mail:");

        jLabel8.setText("Web de la empresa:");

        panelFoto.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );

        btnOpcionForm.setText("Crear");
        btnOpcionForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpcionFormActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Añadir logo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Para más opciones, selecciona una fila y presiona clic derecho");

        comboRegimen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnOpcionForm, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtWebEmpresa))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                        .addGap(46, 46, 46))
                                    .addComponent(comboRegimen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(txtTel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addGap(112, 112, 112))
                                    .addComponent(txtRFC)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                        .addGap(132, 132, 132))
                                    .addComponent(txtMail))))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(panelFoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboRegimen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtWebEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpcionForm)
                    .addComponent(jButton2))
                .addGap(15, 15, 15)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpcionFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpcionFormActionPerformed
        if (validar()) {
            try {
                Empresa empresa = getDatosEmpresa();
                if (crearEmpresa) {
                    if (!new EmpresaController().create(connection, empresa)) {
                        JOptionPane.showMessageDialog(this, "Por favor intente más tarde...", "ERROR AL REGISTRAR", 1);
                    }
                } else {
                    if (!new EmpresaController().update(connection, empresa, idActualizar)) {
                        JOptionPane.showMessageDialog(this, "Por favor intente más tarde...", "ERROR AL ACTUALIZAR", 1);
                    } else {
                        crearEmpresa = true;
                        btnOpcionForm.setText("Crear");
                        idActualizar = 0;
                    }
                }
                photo.uploadSelectedPhoto();
                initDataTable();
                cleanDatosEmpresaForm();
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Tienes que seleccionar un regimen para tu empresa", "ERROR...", 1);
            }
        }
    }//GEN-LAST:event_btnOpcionFormActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
    }//GEN-LAST:event_EditarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
    }//GEN-LAST:event_EliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cleanDatosEmpresaForm();
        btnOpcionForm.setText("Crear");
        crearEmpresa = true;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        photo.setPhoto(parent);
        photo.setPhotoJPanel(panelFoto);
    }//GEN-LAST:event_jButton1ActionPerformed

    private synchronized Empresa getDatosEmpresa() {
        Empresa empresa = new Empresa();
        empresa.emp_nombre = txtNombre.getText();
        empresa.emp_rfc = txtRFC.getText();
        empresa.emp_tel = txtTel1.getText();
        empresa.emp_tel2 = txtTel2.getText();
        empresa.emp_web = txtWebEmpresa.getText();
        empresa.emp_email = txtMail.getText();
        empresa.regimen_id_regimen = getIdRegimenFiscal();
        empresa.emp_logo = photo.getPosiblePathPhoto();
        return empresa;
    }

    private synchronized void setDatosEmpresaForm(Empresa empresa) {
        cleanDatosEmpresaForm();
        txtNombre.setText(empresa.emp_nombre);
        txtRFC.setText(empresa.emp_rfc);
        txtTel1.setText(empresa.emp_tel);
        txtTel2.setText(empresa.emp_tel2);
        txtWebEmpresa.setText(empresa.emp_web);
        txtMail.setText(empresa.emp_email);
        setIdRegimenFiscal(empresa);
        if (empresa.emp_logo.length() > 1) {
            photo.setPhoto(empresa.emp_logo);
            photo.setPhotoJPanel(panelFoto);
        }
    }

    private void cleanDatosEmpresaForm() {
        txtNombre.setText("");
        txtRFC.setText("");
        txtTel1.setText("");
        txtTel2.setText("");
        txtWebEmpresa.setText("");
        txtMail.setText("");
        comboRegimen.setSelectedIndex(0);
        photo.cleanPanelPhoto(panelFoto);
    }

    private int getIdRegimenFiscal() {
        String selectedValue = (String) comboRegimen.getSelectedItem();
        return ((Regimen) (getComboSQLModel().findByMainField(selectedValue))).id_regimen;
    }

    private void setIdRegimenFiscal(Empresa empresa) {
        comboRegimen.setSelectedItem(((Regimen) getComboSQLModel().findByFielNameAndValue("id_regimen",
                empresa.regimen_id_regimen)).reg_descripcion
        );
    }

    @Override
    public boolean validar() {
        // PRUEBA DE VALIDACIÓN DE LOS CAMPOS RFC E EMAIL
        boolean valido = true;
        Empresa empresa = getDatosEmpresa();
        Validator v = new Validator();
        List<ValidateFieldError> errors = v.validateFields(empresa);
        Border borderRED = BorderFactory.createLineBorder(Color.RED, 3);
        Border borderBlack = BorderFactory.createLineBorder(Color.yellow, 1);
        for (ValidateFieldError e : errors) {
            switch (e.fieldName) {
                case "emp_email":
                    if (e.getErrors().size() > 0) {
                        txtMail.setBorder(borderRED);
                        valido = false;
                    } else {
                        //txtMail.setBorder(null);
                        txtMail.setBorder(borderBlack);
                    }
                    break;
                case "emp_rfc":
                    if (e.getErrors().size() > 0) {
                        txtRFC.setBorder(borderRED);
                        valido = false;
                    } else {
                        //txtRFC.setBorder(null);
                        txtRFC.setBorder(borderBlack);
                    }
            }
        }
        return valido;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Editar;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JButton btnOpcionForm;
    private javax.swing.JComboBox comboRegimen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu opcionesEmpresa;
    private javax.swing.JPanel panelFoto;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtTel1;
    private javax.swing.JTextField txtTel2;
    private javax.swing.JTextField txtWebEmpresa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void eventEditFromJtable(int row) {
        Empresa empresa = (Empresa) ((MerchantTableModel) tableEmpresas.getModel()).getObjectByRow(row);
        setDatosEmpresaForm(empresa);
        btnOpcionForm.setText("Editar");
        idActualizar = empresa.id_empresa;
        crearEmpresa = false;
    }

    @Override
    public void eventDelFromJtable(int row) {
        Empresa empresa = (Empresa) ((MerchantTableModel) tableEmpresas.getModel()).getObjectByRow(row);
        int res = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar la empresa \"" + empresa.emp_nombre + "\"?");
        if (res == JOptionPane.OK_OPTION) {
            if (empresaController.delete(connection, empresa.id_empresa)) {
                ((EmpresaTableModel) tableEmpresas.getModel()).initData(connection);
            } else {
                JOptionPane.showMessageDialog(null, "Por favor intente más tarde...", "ERROR AL ELIMINAR", 1);
            }
        }
        cleanDatosEmpresaForm();
    }
}
